function LinkedList() {
  var length = 0;
  var head = null;

  var Node = function(element){ // {1}
    this.element = element;
    this.next = null;
  };

  this.size = function(){
    return length;
  };

  this.head = function(){
    return head;
  };

  this.add = function(element){
    var node = new Node(element);
    if(head === null){
        head = node;
    } else {
        var currentNode = head;

        while(currentNode.next){
            currentNode  = currentNode.next;
        }

        currentNode.next = node;
    }

    length++;
  };

  // Only change code below this line
  this.removeAt = function(index){
    let currentIndex = 0
    let previousNode 
    let currentNode = head

//is the index contained in the list?
    if(index < 0 || index >= length){
      return null
    }

//is the index the first element in the list 
      if(index === 0){
        head = currentNode.next;
    }

else{

  while(currentIndex < index){
    previousNode = currentNode 
    currentNode = currentNode.next
    currentIndex++
  }

  previousNode.next = currentNode.next
}

 length--
 return currentNode.element

  // Only change code above this line
}
}
