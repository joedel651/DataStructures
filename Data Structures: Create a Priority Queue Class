function PriorityQueue () {
    this.collection = [];
    this.printCollection = function() {
      console.log(this.collection);
    };
    // Only change code below this line
  this.enqueue = function(element){
    
    return collection.push(element)
  }

  this.findPriority = function(){
    var values = array.map(function(keys) { return keys[1]; });
    return Math.min.apply(null, values)
  }
  this.dequeue = function(){
    //shift is like pop but removes elements from the beginning of the array
    return collection.shift()
  }
 
  this.size = function(){
    return collection.length
  }
  this.isEmpty = function(val){
 if( collection.length == 0){
   return true

  }

  else{return false}
}

}

let array = [['human', 4], ['kitten', 7], ['dog', 3], ['rabbit', 8]];
var values = array.map(function(keys) { return keys[1]; });
var thePriority = Math.min.apply(null, values)
console.log(thePriority)

console.log(array.find(element => element[1] == thePriority))

function arrayRemove(arr) {
  var values = array.map(function(keys) { return keys[1]; });
  var thePriority = Math.min.apply(null, values)

   return arr.filter(function(element){
       return element[1] != thePriority;
   });

}

var result = arrayRemove(array);
console.log(result)
